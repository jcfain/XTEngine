const scriptStatusElement=document.getElementById("scriptStatus"),scriptStatusContainerElement=document.getElementById("scriptStatusContainer"),scriptStatusButton=document.getElementById("scriptStatusButton"),noScriptInputEmlement=document.getElementById("noScriptInput");let lerpInterval,currentChannels={},isShown=!1,isScriptStatusPaused=!1;function toggleScriptStatusModal(){scriptStatusElement.classList.toggle("hidden"),scriptStatusButton.classList.toggle("icon-button-down"),isShown=!scriptStatusElement.classList.contains("hidden")}function setPauseScriptStatus(isPaused){isScriptStatusPaused=isPaused}function setupchannel(channel){if(currentChannels[channel])return void currentChannels[channel].show();let userChannel=remoteUserSettings.availableChannelsArray.find((x=>x.channel==channel)),channelAnimation=new ChannelAnimation;scriptStatusContainerElement.appendChild(channelAnimation.create(userChannel)),currentChannels[channel]=channelAnimation}function setChannelStatus(channel,value,time,timeType){if(!isShown)return;noScriptInputEmlement.classList.contains("hidden")||noScriptInputEmlement.classList.add("hidden"),setupchannel(channel),debug(`${channel} enter setChannelStatus value: ${value} time: ${time} timeType: ${timeType}`);let channelsAnimation=currentChannels[channel];channelsAnimation.timeout&&clearTimeout(channelsAnimation.timeout),channelsAnimation.setChannelStatus(value,time,timeType),channelsAnimation.timeout=setTimeout((function(){channelsAnimation.hide(),Object.keys(currentChannels).every((x=>currentChannels[x].hidden))&&noScriptInputEmlement.classList.remove("hidden")}),1e4)}class ChannelAnimation{hidden=!1;timeout=void 0;parent;label;progress;channel;targetValue=0;targetValue=0;targetTime=0;startValue=0;startTime=0;elapsedMillis=0;lastAnimation;constructor(){}create(userChannel){this.channel=userChannel,this.parent=document.createElement("div"),this.parent.id=userChannel.channel+"ParentElement",this.parent.classList.add("script-status-div"),this.progress=document.createElement("progress");const channelColor=getChannelColor(userChannel.channel);this.progress.style.setProperty("color",channelColor),this.progress.style.setProperty("--scrollbar-background",channelColor),this.progress.classList.add("script-status-progress"),this.label=document.createElement("label"),this.label.classList.add("script-status-label"),this.label.innerText=userChannel.friendlyName;let valueId=userChannel.channel+"ValueElement";return this.label.setAttribute("for",valueId),this.progress.id=valueId,this.progress.min=0,this.progress.max=100,this.progress.classList.add("pregress-status"),this.parent.appendChild(this.label),this.parent.appendChild(this.progress),this.parent}setChannelStatus(value,time,timeType){this.lastAnimation&&(cancelAnimationFrame(this.lastAnimation),debug(`${this.channel.channel} cancelAnimationFrame`),this.lastAnimation=void 0),this.startValue=this.progress.value,this.startTime=0,this.targetValue=value,this.targetTime=time,this.progress.value!=value&&(debug(`${this.channel.channel} setChannelStatus startValue: ${this.startValue} targetValue: ${this.targetValue} targetTime: ${this.targetTime}`),this.label.innerText=`${this.channel.friendlyName}: ${this.targetValue} ${isScriptStatusPaused?": paused":""}`,this.lastAnimation=requestAnimationFrame(this.animate.bind(this)))}hide(){this.parent.classList.add("hidden"),this.hidden=!0}show(){this.hidden||this.parent.classList.remove("hidden"),this.hidden=!1}animate(timeStamp){if(this.startTime&&!isScriptStatusPaused||(this.startTime=timeStamp),isScriptStatusPaused)this.label.innerText=`${this.channel.friendlyName}: ${this.targetValue} ${isScriptStatusPaused?": paused":""}`;else{this.elapsedMillis=timeStamp-this.startTime;let downStroke=this.startValue>this.targetValue,timeScale=downStroke?scale(this.elapsedMillis,this.targetTime,0,0,1):scale(this.elapsedMillis,0,this.targetTime,0,1);if(this.progress.value=downStroke?lerp(this.targetValue,this.startValue,timeScale):lerp(this.startValue,this.targetValue,timeScale),debug(`${this.channel.channel} ${downStroke?"DownStroke":"UpStroke"} targetValue: ${round(this.targetValue,2)} targetTime: ${round(this.targetTime,2)} elapsedMillis: ${round(this.elapsedMillis,2)} timescale: ${round(timeScale,2)} progressValue: ${round(this.progress.value,2)}`),this.progress.value==this.targetValue)return debug(`${this.channel.channel} Target value reached: ${this.targetValue}`),void debug(`${this.channel.channel} progressValue: ${this.progress.value}`);if(this.elapsedMillis>=this.targetTime)return debug(`${this.channel.channel} Target time reached: ${this.targetTime}`),void debug(`${this.channel.channel} elapsedMillis: ${this.elapsedMillis}`)}requestAnimationFrame(this.animate.bind(this))}linear(time,start,end,duration){return(end-start)*time/duration+start}}